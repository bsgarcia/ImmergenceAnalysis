%% This Script Plots Behavioural and Computational Data
%______________________________________________________
variableExtractionFromRawData;


% Fitting each model
%----------------------------
nsub = numel(subjects);
init = {[50, .5, .5], [50, .5, .5]};
lb = {[0.01, 0, 0], [0.01, 0, 0]};
ub = {[100, 1, 1], [100, 1, 1]};
options = optimset(...
    'Algorithm',...
    'interior-point',...
    'Display', 'off',...
    'MaxIter', 10000*5,...
    'MaxFunEval', 10000*5);

w = waitbar(0, 'Fitting subject');

% fit Models
for model = 1:2
    
    for sub = 1 : numel(subjects) % Number of Subjects
        
        waitbar(...
            sub/nsub,...  % Compute progression
            w,...
            sprintf('%s%d', 'Fitting subject ', sub)...
            );
        
        [
            p,...
            l,...
            rep,...
            output,...
            lmbda,...
            grad,...
            hess,...
            ] = fmincon(...
            @(x) getLL(...
                x,...
                con{sub},...
                cho{sub},...
                out{sub},...
                model,...
                priors{model},...
                lastR{sub},economyParameters,actualExchange{sub}...
                ),...
                init{model},...
                [], [], [], [],...
                lb{model},...
                ub{model},...
                [],...
                options...
            );
        parameters{model}(sub, :) = p;
        ll{model}(sub) = l;
        
    end
end
      
close(w);
    

%load Data_LearningToSpeculate_2018.mat

% Computing Model Predictions
%----------------------------

for model = 1:2    % Number of Model of Interest
    
    for sub = 1 : numel(subjects) % Number of Subjects
                                    
        [modelPrediction{model}{sub}, modelProba{model}{sub}]  = ...
                Computational_Models(...
                parameters{model}(sub,:),...
                con{sub},...
                cho{sub},...
                out{sub},...
                model,...
                priors{model},...
                lastR{sub},economyParameters,actualExchange{sub}); 

    end
    
end

%  Speculation Variable Computation
%----------------------------------
[speculationFrequency_data, speculation_data, speculationFrequency_model, speculation_model, index] = ...
    speculationVariablesExtraction(modelPrediction, modelProba, con, subjects,...
    statNumber, startGood, partnersType, proposedGood, willToExchange);


% Plotting Speculation - Behaviours + Models
%-------------------------------------------

for sub = 1:numel(subjects)
    spec(sub) = sum(observedSpeculation{sub});
end

%plotSpeculation(speculation_data, speculation_model, index);

figure('Position', [1,1,700,500]);

    scatterCorr(...
        repmat(spec, [1, 2])',....
        repmat(spec, [1, 2])(speculationFrequency_data)',...
        'b',...
        0.7,...
        1,...
        1 ...
        );
%     
    set(gca,'TickDir','out')

    ylabel('Speculation frequency');
    xlabel('Observed speculation');
    %ylim([.4, 1])
   % title(titles{i});
%     
    mkdir('./', 'figs');
    saveas(gcf, sprintf('corr_freq'));
    
